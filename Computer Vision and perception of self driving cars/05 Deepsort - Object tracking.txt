Given: videos : cars moving in video 

Objective: track object movement


a) How to track object moving ? deep sort


	a.1) What is SORT(Simple online real time tracking) algo?
		What it uses? 
			a.2.1) Bounding box prediction
				What is BBP? 	
					a.2.1.1) generate bounding boxes , find where are different objects
							How bounding box generated? Any CNN architecture: YOLO(YOLO v3),RCNN, custom CV model

						   also label what object is
					

			a.2.2) What is Kalman filter? linear approximation
						   does what? predict what future location of object				
						   why predict? use prediction --> check if prediction is same object or not
						   
					a.2.2.1) How to solve occlusion problem? overlap object problem
						for ex if 2 balls overlap each other
						can use predictions
			
					a.2.2.2) How Kalman filter works?
							linear velocity model --> generate predictions accoridngly
							1) Find where object is 
							2) input into kalman filter
							3) output: Probability distribution //where object can be
							4) again input into kalman filter
							5) Output: improved Probability distribution	//where object can be
									//What insight we get from probability distribution?
									max value of Distribution --> approx where object will be
			

			a.2.3) What is IOU matching 	
				a.2.3.1) What is IOU matching: Intersection over union
				a.2.3.2) What it gives? score //how much 2 boxes are similar to each other (in terms of location and size)
				a.2.3.3)  Ex
				for ex we have n cars in a frame
						   n ids to assign to cars
							//id determines which object to track
						   How to assign n id to n cars?
							How n ids are calculated?
								for each id ---> IOU score for each detection	
									//each id has different detection

								//Objects in row
								//IDs in column
						Conclusion: IOU score for each ID and GS detection
								Assign IOU scores to n detections
								Overall total IOU score should maximize

				//How to solve? n! complexity: Brute force
						    n^3 complexity : Hungarian algorithm


		//What after assigning n prediction to n ids
		TRACKING PROBLEM SOLVED for ith frame
		//RUN ALGO IN LOOP for each frame-->  KEEP TRACK OF OBJECTS in next frame	


	a.2) What is DEEP SORT, Why DEEP SORT?

SUMMARY:
	What is DEEP? Deep Appearence Descriptor
			  Cascade matching step


A) DEEP APPEARENCE DESCRIPTOR

	a.2.1) What is Deep Appearence Descriptor?
		Convolutional neural network
		
	a.2.2) What DEEP does? detect similar object in different images

			What input to DEEP? cropped image of object detected
			What output to DEEP? vector
					What vector represents? encoded info present in cropped image
					How we will use it? compare different objects using DEEP


//What we have till now? 2 models  (DEEP and KALMAN)

tell us about similar objects in different frames of video  

	a.2.3) Combine scores (DEEP) + score (Kalman)

	1) score(DEEP) : cosine distance metric for checking similarity. Why? outputs single point, can find similarity easily
	2) score(Kalman) :Mahalanobis Distance for checking similarity. Why?outputs prob distribution


	1) DEEP : cosine 

	How to combine scores?
		What is a distance metric? score assigned to Entity A and Entity B
		On a 2D graph , if points A and B are close, their distance from origin is similar --> they are very similar to each other


		What is cosine distance metric?
		If given A and B
			join both with 2 vector
			find angle between vectors
				cos(angle)=  cosine distance metric

			What to do with with cosine metric?
			cos(0) = 1 = very similar entities


		Why Kalman filter no cosine similarity? it outputs prob distribution


	2) KALMAN: Mahalanobis Distance	//Note: predictions found not very useful //However works in our project

		What is given: Probability distribution graph
		Objective : compare a point with the graph

		2.1) find where data spread is highest	//
		2.2) Normalize and transform the coordinate axes
		2.3) calculate distance of point from origin
				Distance = mahalanobis distance

	
					

	Combine 1) and 2) --> assign value to ids 		//How NGALEON algo




B) Cascade matching
	Exension to IOU matching algo
	What solves? takes into account: temporal dimension while assignment
		Wha tis temporal dimension?
			Reduces time complexity for hungarian algo
			How? tries to match latest detections ---> latest ids
						old detections   ----> old ids




Conclusion: 
A + B = DeepSORT algorithm

//run algo in loop --> track objects in a complete video
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=

			
Results

Scenario: 2 cars moving
	each car assigned an id
	In few frames miss to identify car -->  but still tracked with correct id
	occlusion problem //id changed
				//tried changing hyper parameter values --> couldnt solve
			//Why caused? negligible weight assigned to Kalman filter predictions

			

				
	