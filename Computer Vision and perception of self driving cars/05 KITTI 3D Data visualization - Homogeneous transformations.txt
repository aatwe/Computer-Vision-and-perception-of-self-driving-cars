What given:   Camera images: KITTI 3d Object detection dataset


		LIDAR Data : 
		//note lidar also gives projection of road
		//camera POV : LIDAR Data




How to generate this data?


a) Homogeneous transformations

case: Lidar on top, camera on front

	//What is camera? visual sensor? 2d scene capture
	//what is Lidar    ? perception sensor? maps 3d environment	 , how? rotating laser  // 
		//How lidar maps? point clouds
		//Why point clouds? represent a 3d Environment
		//data capture
		
	Why homogeneous transformation?  camera view, lidar view , pov conversion

	a.1) How to do pov conversion? homogeneous transformation
	
	a.2) What given?
		2 axes (blue, red)
		2 reference points (2 pov)
		object = black dot

		Mathematically:
			Given:
			vector from origin to object: X  (pov blue)
			Find: 
			vector from origin to object: X'  (pov red )	//Find


		How to apply transformation?	
		Transformation = Translation (move origin)+ Rotation (change direction of axes, origin unmoved)

		How to apply rotation?
			How to rotate on x axis
			How to rotate on y axis
			How to rotate on z axis


//TRANSLATION
//translated vector	       original		translate by how much vector	//translation vector (T)
		Xt	 =	  X	 +	 (a,b,c)

	//note: Xt values can be anything
		However parameters of matrix are bound between in range (parameters = rows,col,elements,order,diagonal,rank,trace,eigenvalues, eigen vectors
----------------------------------------
//ROTATION (matrix multiplication)

		Xr  	= 	X. (a , b , c| d , e , f | g , h , i)

Multiplier?
	to be Rotated matrix 	|	T(translation vector)
	______________________|__________________________				
	000				|	1
			
			


X'=	X1' =  (a  b  c  p)	X1
	X2' =  (d  e  f   q)	X2
	X3' =  (g  h  i    r)	X3
	1    =  (0  0  0  1)	1


b)Xt + Xr = Homogeneous transformation

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
How to convert this vector data to camera pov	//What camera does?

	a) Define camera centre (Origin)ld
	b) Define a image plane 1 unit away
		//What is image plane?
	c) Project the 3d point on image plant	//What camera does

	
How to project that point on 3d plane? homogeneous transformations


	a) Given : M = transformational matrix
	
			
	X'' = M . X'		//X' = 3d object vector


	b) how points would look like in image plane?
		
	s = X''[1] / X''[2]		//Divide 	//y coordinate of X'' / z coordinate of X''
	r = X''[0] / X''[2]		//Divide 	//x coordinate of X'' / z coordinate of X''


What final output? transformation of 3d point on 2d plane

How we will use this? Point cloud generated by LIDAR --> convert into 2D plane

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Note: in above camera pov transformation

	extrinsic parameters : external to camera (How placed)		//Translation , rotation
	
	intrinsic parameters:  (specs)						//s , r , x''


How to identify these parameters? Checker board method

	a) Get photo of checker board
	b) click images in differeent position and angles
	c) apply transformations --> find extrinsic and intrinsic parameters

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
What next? Data visualization'



1) How Lidar data generated in form of camera

	1.1) get points array	//all points of point cloud captured by LIDAR
	1.2) veloToCam(pointsArray + extrinsic_camera_metrics)	//velo = velodyne LIDAR sensor
		What function does? matrix multiply 
		pointsArray x extrinsic_camera_metrics

		output: points in camera reference =  pts_3d_cam =  pointsArray x extrinsic_camera_metrics

	1.4)    pts_3d_cam x intrinsic_camera_metrics
		//points in camera reference x intrinsic_camera_metrics

	1.5)
		
	s = X''[1] / X''[2]		//Divide 	//y coordinate of X'' / z coordinate of X''
	r = X''[0] / X''[2]		//Divide 	//x coordinate of X'' / z coordinate of X''

	1.6) fill different colors
	self.image[y, x] = color

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
How to generate  bird's eye view of LIDAR

//Do this for different point clouds
	
	1) take points of point cloud
	2) scale the points such that they occupy complete frame of image
	3) fill different colors
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Find combined view of LIDAR and Boxes